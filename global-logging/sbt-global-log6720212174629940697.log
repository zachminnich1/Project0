[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ZACHMI~1\AppData\Local\Temp\idea10.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ZACHMI~1\AppData\Local\Temp\idea10.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (AdoptOpenJDK Java 1.8.0_265)
[debug]       Load.loadUnit: plugins took 79.2097ms
[debug]       Load.loadUnit: defsScala took 0.2842ms
[debug] [Loading] Scanning directory C:\Users\Zach Minnich\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Zach Minnich\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.1066 ms
[debug]           Load.resolveProject(global-plugins) took 115.755401ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Zach Minnich\.sbt\1.0\plugins, plugins: List(<none>))) took 155.826501ms
[debug] [Loading] Done in C:\Users\Zach Minnich\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 174.739299ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2237ms
[debug]     Load.loadUnit(file:/C:/Users/Zach%20Minnich/.sbt/1.0/plugins/, ...) took 261.0074ms
[debug]   Load.apply: load took 395.870001ms
[debug]   Load.apply: resolveProjects took 5.1828ms
[debug]   Load.apply: finalTransforms took 46.088399ms
[debug]   Load.apply: config.delegates took 6.6105ms
[debug]   Load.apply: Def.make(settings)... took 1721.719099ms
[debug]   Load.apply: structureIndex took 77.863899ms
[debug]   Load.apply: mkStreams took 1.3983ms
[info] loading global plugins from C:\Users\Zach Minnich\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3502.7677ms
[debug]           Load.loadUnit: plugins took 21.2565ms
[debug]           Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\Zach Minnich\IdeaProjects\Project0\project
[debug]             Load.loadUnit: mkEval took 5.882199ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Zach Minnich\IdeaProjects\Project0\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2643 ms
[info] loading settings for project project0-build from idea10.sbt ...
[debug]               Load.resolveProject(project0-build) took 4.520101ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project0-build, base: C:\Users\Zach Minnich\IdeaProjects\Project0\project, plugins: List(<none>))) took 6.246101ms
[debug] [Loading] Done in C:\Users\Zach Minnich\IdeaProjects\Project0\project, returning: (project0-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 110.144101ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.6138ms
[debug]         Load.loadUnit(file:/C:/Users/Zach%20Minnich/IdeaProjects/Project0/project/, ...) took 136.878301ms
[debug]       Load.apply: load took 137.9789ms
[debug]       Load.apply: resolveProjects took 0.098101ms
[debug]       Load.apply: finalTransforms took 6.5602ms
[debug]       Load.apply: config.delegates took 0.370699ms
[debug]       Load.apply: Def.make(settings)... took 69.496199ms
[debug]       Load.apply: structureIndex took 18.7983ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from C:\Users\Zach Minnich\IdeaProjects\Project0\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 442.8068ms
[debug]     Load.loadUnit: defsScala took 0.003899ms
[debug] [Loading] Scanning directory C:\Users\Zach Minnich\IdeaProjects\Project0
[debug]       Load.loadUnit: mkEval took 0.2557ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Zach Minnich\IdeaProjects\Project0, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5104 ms
[info] loading settings for project project0 from build.sbt ...
[debug]         Load.resolveProject(project0) took 26.714101ms
[debug]       Load.loadTransitive: finalizeProject(Project(id project0, base: C:\Users\Zach Minnich\IdeaProjects\Project0, plugins: List(<none>))) took 29.1628ms
[debug] [Loading] Done in C:\Users\Zach Minnich\IdeaProjects\Project0, returning: (project0)
[debug]     Load.loadUnit: loadedProjectsRaw took 60.8017ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.7681ms
[debug]   Load.loadUnit(file:/C:/Users/Zach%20Minnich/IdeaProjects/Project0/, ...) took 508.020001ms
[debug] Load.apply: load took 509.2716ms
[debug] Load.apply: resolveProjects took 0.0912ms
[debug] Load.apply: finalTransforms took 28.381599ms
[debug] Load.apply: config.delegates took 0.5092ms
[debug] Load.apply: Def.make(settings)... took 97.8283ms
[debug] Load.apply: structureIndex took 18.5328ms
[debug] Load.apply: mkStreams took 0.0039ms
[info] set current project to Project0 (in build file:/C:/Users/Zach%20Minnich/IdeaProjects/Project0/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63213 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63213, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Project0 (in build file:/C:/Users/Zach%20Minnich/IdeaProjects/Project0/)
[debug] > Exec(idea-shell, None, None)
