[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ZACHMI~1\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ZACHMI~1\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (AdoptOpenJDK Java 1.8.0_265)
[debug]       Load.loadUnit: plugins took 109.7358ms
[debug]       Load.loadUnit: defsScala took 0.3057ms
[debug] [Loading] Scanning directory C:\Users\Zach Minnich\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Zach Minnich\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.618599 ms
[debug]           Load.resolveProject(global-plugins) took 41.812ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Zach Minnich\.sbt\1.0\plugins, plugins: List(<none>))) took 166.275499ms
[debug] [Loading] Done in C:\Users\Zach Minnich\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 191.6896ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2349ms
[debug]     Load.loadUnit(file:/C:/Users/Zach%20Minnich/.sbt/1.0/plugins/, ...) took 308.8115ms
[debug]   Load.apply: load took 499.498599ms
[debug]   Load.apply: resolveProjects took 5.5314ms
[debug]   Load.apply: finalTransforms took 49.480599ms
[debug]   Load.apply: config.delegates took 6.241899ms
[debug]   Load.apply: Def.make(settings)... took 8965.4611ms
[debug]   Load.apply: structureIndex took 99.0975ms
[debug]   Load.apply: mkStreams took 2.240401ms
[info] loading global plugins from C:\Users\Zach Minnich\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 11257.024399ms
[debug]           Load.loadUnit: plugins took 23.2364ms
[debug]           Load.loadUnit: defsScala took 0.002899ms
[debug] [Loading] Scanning directory C:\Users\Zach Minnich\IdeaProjects\Project0\project
[debug]             Load.loadUnit: mkEval took 7.450999ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Zach Minnich\IdeaProjects\Project0\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3675 ms
[info] loading settings for project project0-build from idea2.sbt ...
[debug]               Load.resolveProject(project0-build) took 12.9693ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project0-build, base: C:\Users\Zach Minnich\IdeaProjects\Project0\project, plugins: List(<none>))) took 14.8323ms
[debug] [Loading] Done in C:\Users\Zach Minnich\IdeaProjects\Project0\project, returning: (project0-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2342.872801ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.525299ms
[debug]         Load.loadUnit(file:/C:/Users/Zach%20Minnich/IdeaProjects/Project0/project/, ...) took 2370.5795ms
[debug]       Load.apply: load took 2371.8753ms
[debug]       Load.apply: resolveProjects took 0.118ms
[debug]       Load.apply: finalTransforms took 12.7691ms
[debug]       Load.apply: config.delegates took 0.438401ms
[debug]       Load.apply: Def.make(settings)... took 83.8074ms
[debug]       Load.apply: structureIndex took 25.6868ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Users\Zach Minnich\IdeaProjects\Project0\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4538.592301ms
[debug]     Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory C:\Users\Zach Minnich\IdeaProjects\Project0
[debug]       Load.loadUnit: mkEval took 0.1946ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Zach Minnich\IdeaProjects\Project0, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8147 ms
[info] loading settings for project project0 from build.sbt ...
[debug]         Load.resolveProject(project0) took 28.154899ms
[debug]       Load.loadTransitive: finalizeProject(Project(id project0, base: C:\Users\Zach Minnich\IdeaProjects\Project0, plugins: List(<none>))) took 32.1439ms
[debug] [Loading] Done in C:\Users\Zach Minnich\IdeaProjects\Project0, returning: (project0)
[debug]     Load.loadUnit: loadedProjectsRaw took 707.570001ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.2583ms
[debug]   Load.loadUnit(file:/C:/Users/Zach%20Minnich/IdeaProjects/Project0/, ...) took 5252.911199ms
[debug] Load.apply: load took 5254.1753ms
[debug] Load.apply: resolveProjects took 0.079999ms
[debug] Load.apply: finalTransforms took 26.4321ms
[debug] Load.apply: config.delegates took 0.2496ms
[debug] Load.apply: Def.make(settings)... took 63.6755ms
[debug] Load.apply: structureIndex took 17.4355ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to Project0 (in build file:/C:/Users/Zach%20Minnich/IdeaProjects/Project0/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63213 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63213, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Project0 (in build file:/C:/Users/Zach%20Minnich/IdeaProjects/Project0/)
[debug] > Exec(idea-shell, None, None)
