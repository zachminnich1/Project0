[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ZACHMI~1\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ZACHMI~1\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (AdoptOpenJDK Java 1.8.0_265)
[debug]       Load.loadUnit: plugins took 101.2214ms
[debug]       Load.loadUnit: defsScala took 0.3893ms
[debug] [Loading] Scanning directory C:\Users\Zach Minnich\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Zach Minnich\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.8172 ms
[debug]           Load.resolveProject(global-plugins) took 116.669ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Zach Minnich\.sbt\1.0\plugins, plugins: List(<none>))) took 159.4691ms
[debug] [Loading] Done in C:\Users\Zach Minnich\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 184.3545ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2618ms
[debug]     Load.loadUnit(file:/C:/Users/Zach%20Minnich/.sbt/1.0/plugins/, ...) took 296.1818ms
[debug]   Load.apply: load took 438.4776ms
[debug]   Load.apply: resolveProjects took 5.0017ms
[debug]   Load.apply: finalTransforms took 45.1467ms
[debug]   Load.apply: config.delegates took 6.4783ms
[debug]   Load.apply: Def.make(settings)... took 2423.2133ms
[debug]   Load.apply: structureIndex took 96.2743ms
[debug]   Load.apply: mkStreams took 1.8255ms
[info] loading global plugins from C:\Users\Zach Minnich\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4316.2363ms
[debug]           Load.loadUnit: plugins took 23.834ms
[debug]           Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\Zach Minnich\IdeaProjects\Project0\project
[debug]             Load.loadUnit: mkEval took 6.6156ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Zach Minnich\IdeaProjects\Project0\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3717 ms
[info] loading settings for project project0-build from idea1.sbt ...
[debug]               Load.resolveProject(project0-build) took 2.5129ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project0-build, base: C:\Users\Zach Minnich\IdeaProjects\Project0\project, plugins: List(<none>))) took 4.2612ms
[debug] [Loading] Done in C:\Users\Zach Minnich\IdeaProjects\Project0\project, returning: (project0-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 115.8525ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.8454ms
[debug]         Load.loadUnit(file:/C:/Users/Zach%20Minnich/IdeaProjects/Project0/project/, ...) took 144.4009ms
[debug]       Load.apply: load took 145.5165ms
[debug]       Load.apply: resolveProjects took 0.097ms
[debug]       Load.apply: finalTransforms took 11.3707ms
[debug]       Load.apply: config.delegates took 0.3347ms
[debug]       Load.apply: Def.make(settings)... took 86.729ms
[debug]       Load.apply: structureIndex took 26.0731ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Users\Zach Minnich\IdeaProjects\Project0\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 498.7144ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\Zach Minnich\IdeaProjects\Project0
[debug]       Load.loadUnit: mkEval took 0.232ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Zach Minnich\IdeaProjects\Project0, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.3767 ms
[info] loading settings for project project0 from build.sbt ...
[debug]         Load.resolveProject(project0) took 24.8919ms
[debug]       Load.loadTransitive: finalizeProject(Project(id project0, base: C:\Users\Zach Minnich\IdeaProjects\Project0, plugins: List(<none>))) took 27.1799ms
[debug] [Loading] Done in C:\Users\Zach Minnich\IdeaProjects\Project0, returning: (project0)
[debug]     Load.loadUnit: loadedProjectsRaw took 70.3716ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.3327ms
[debug]   Load.loadUnit(file:/C:/Users/Zach%20Minnich/IdeaProjects/Project0/, ...) took 572.8865ms
[debug] Load.apply: load took 574.1794ms
[debug] Load.apply: resolveProjects took 0.104ms
[debug] Load.apply: finalTransforms took 17.7559ms
[debug] Load.apply: config.delegates took 0.2645ms
[debug] Load.apply: Def.make(settings)... took 59.2439ms
[debug] Load.apply: structureIndex took 16.6999ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to Project0 (in build file:/C:/Users/Zach%20Minnich/IdeaProjects/Project0/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53161 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53161, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Project0 (in build file:/C:/Users/Zach%20Minnich/IdeaProjects/Project0/)
[debug] > Exec(idea-shell, None, None)
